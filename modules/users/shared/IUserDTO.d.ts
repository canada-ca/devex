import { ICapability } from "../../capabilities/shared/ICapabilityDTO";
import { ICapabilitySkill } from "../../capabilities/shared/ICapabilitySkillDTO";
import { IOrg } from "../../orgs/shared/IOrgDTO";

export interface IUser {
	_id: string;
	id: string;
	firstName: string;
	lastName: string;
	displayName: string;
	email: string;
	username: string;
	orgsAdmin: IOrg[];
	orgsMember: IOrg[];
	orgsPending: IOrg[];
	password: string;
	salt: string;
	profileImageURL: string;
	provider: string;
	government: string;
	isDisplayEmail: boolean;
	notifyOpportunities: boolean;
	subscribeOpportunitiesId: string;
	convertedNotifications: boolean;
	notifyEvents: boolean;
	notifyBlogs: boolean;
	userTitle: string;
	providerData: object;
	roles: string[];
	updated: Date;
	created: Date;
	resetPasswordToken: string;
	resetPasswordExpires: Date;
	isDeveloper: boolean;
	paymentMethod: string;
	businessName: string;
	businessAddress: string;
	businessAddress2: string;
	businessCity: string;
	businessProvince: string;
	businessCode: string;
	businessContactName: string;
	businessContactEmail: string;
	businessContactPhone: string;
	address: string;
	phone: string;
	notifications: object;
	location: string;
	description: string;
	website: string;
	skills: [string];
	skillsData: object;
	badges: [string];
	endorsements: [object];
	github: string;
	stackOverflow: string;
	stackExchange: string;
	linkedIn: string;
	isPublicProfile: boolean;
	isAutoAdd: boolean;
	capabilities: ICapability[];
	capabilitySkills: ICapabilitySkill[];
	capabilityDetails: [object];
	loggedIn?: boolean;
	isLoggedIn?: boolean;
	isUser?: boolean;
	isAdmin?: boolean;
	isGov?: boolean;
	selected?: boolean;
	addRequest?: boolean;
}
